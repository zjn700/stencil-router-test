/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import '@ionic/core';
import 'ionicons';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';


export namespace Components {

  interface AppHome {
    'activeTab': string;
    'asyncEvent': boolean;
    'fromChild': any;
    'history': RouterHistory;
    'loading': boolean;
    'match': MatchResults;
    'menuOpen': string;
    'stateValue': any;
  }
  interface AppHomeAttributes extends StencilHTMLAttributes {
    'activeTab'?: string;
    'asyncEvent'?: boolean;
    'fromChild'?: any;
    'history'?: RouterHistory;
    'loading'?: boolean;
    'match'?: MatchResults;
    'menuOpen'?: string;
    'stateValue'?: any;
  }

  interface AppTest {
    'color': string;
    'stateValue': any;
  }
  interface AppTestAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'onAsyncEvent'?: (event: CustomEvent) => void;
    'onEmitterTest'?: (event: CustomEvent) => void;
    'stateValue'?: any;
  }

  interface AppProfile {
    'stateValue': any;
  }
  interface AppProfileAttributes extends StencilHTMLAttributes {
    'onAsyncEvent'?: (event: CustomEvent) => void;
    'onEmitterTest'?: (event: CustomEvent) => void;
    'stateValue'?: any;
  }

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface AppVocabulary {
    'cardShow': boolean;
    'showFloatingMenu': boolean;
    'sourceLanguageShow': boolean;
    'words': any;
  }
  interface AppVocabularyAttributes extends StencilHTMLAttributes {
    'cardShow'?: boolean;
    'showFloatingMenu'?: boolean;
    'sourceLanguageShow'?: boolean;
    'words'?: any;
  }

  interface ZjnMenu {}
  interface ZjnMenuAttributes extends StencilHTMLAttributes {
    'onMenuEvent'?: (event: CustomEvent) => void;
  }

  interface ZjnChild {
    'stateValue': any;
  }
  interface ZjnChildAttributes extends StencilHTMLAttributes {
    'onAsyncEvent'?: (event: CustomEvent) => void;
    'onEmitterTest'?: (event: CustomEvent) => void;
    'stateValue'?: any;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppHome': Components.AppHome;
    'AppTest': Components.AppTest;
    'AppProfile': Components.AppProfile;
    'AppRoot': Components.AppRoot;
    'AppVocabulary': Components.AppVocabulary;
    'ZjnMenu': Components.ZjnMenu;
    'ZjnChild': Components.ZjnChild;
  }

  interface StencilIntrinsicElements {
    'app-home': Components.AppHomeAttributes;
    'app-test': Components.AppTestAttributes;
    'app-profile': Components.AppProfileAttributes;
    'app-root': Components.AppRootAttributes;
    'app-vocabulary': Components.AppVocabularyAttributes;
    'zjn-menu': Components.ZjnMenuAttributes;
    'zjn-child': Components.ZjnChildAttributes;
  }


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppTestElement extends Components.AppTest, HTMLStencilElement {}
  var HTMLAppTestElement: {
    prototype: HTMLAppTestElement;
    new (): HTMLAppTestElement;
  };

  interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {}
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppVocabularyElement extends Components.AppVocabulary, HTMLStencilElement {}
  var HTMLAppVocabularyElement: {
    prototype: HTMLAppVocabularyElement;
    new (): HTMLAppVocabularyElement;
  };

  interface HTMLZjnMenuElement extends Components.ZjnMenu, HTMLStencilElement {}
  var HTMLZjnMenuElement: {
    prototype: HTMLZjnMenuElement;
    new (): HTMLZjnMenuElement;
  };

  interface HTMLZjnChildElement extends Components.ZjnChild, HTMLStencilElement {}
  var HTMLZjnChildElement: {
    prototype: HTMLZjnChildElement;
    new (): HTMLZjnChildElement;
  };

  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement
    'app-test': HTMLAppTestElement
    'app-profile': HTMLAppProfileElement
    'app-root': HTMLAppRootElement
    'app-vocabulary': HTMLAppVocabularyElement
    'zjn-menu': HTMLZjnMenuElement
    'zjn-child': HTMLZjnChildElement
  }

  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-test': HTMLAppTestElement;
    'app-profile': HTMLAppProfileElement;
    'app-root': HTMLAppRootElement;
    'app-vocabulary': HTMLAppVocabularyElement;
    'zjn-menu': HTMLZjnMenuElement;
    'zjn-child': HTMLZjnChildElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
